<!-- <h2 style="text-align: center; font-family: 'Open Sans', sans-serif;">Metric Selection Guide</h1>
      <br>
      <div class="row">
        <div class="col-sm" style="background-color:rgb(213, 197, 218); border-radius: 25px">
          <h3>
    </h2>
    <p>Do you want to be fair based on disparate representation
      or based on disparate errors of your system?
    </p>
    <button type="button" class="btn btn-primary btn-sm" id="asnwer1">Representation</button>
    <button type="button" class="btn btn-secondary btn-sm" id="asnwer2">Errors</button>
  </div>
  <div class="col-sm" style="background-color:rgb(229, 230, 201); border-radius: 25px">
    <h3>
      </h2>
      <p>Do you need to select equal number of people from each group
        or proportional to their precentage in the overall population?
      </p>
      <button type="button" class="btn btn-primary btn-sm" id="asnwer3" disabled>Equal Number</button>
      <button type="button" class="btn btn-secondary btn-sm" id="asnwer4" disabled>Proportional</button>
  </div>
  <div class="col-sm" style="background-color:rgb(208, 212, 228); border-radius: 25px">
    <h3>
      </h2>
      <p>Are your interventions punitive or assistive?</p>
      <button type="button" class="btn btn-primary btn-sm" id="asnwer5" disabled>Punitive</button>
      <button type="button" class="btn btn-secondary btn-sm" id="asnwer6" disabled>Assistive</button>
  </div>
  <div class="col-sm" style="background-color: rgb(243, 222, 217); border-radius: 25px">
    <h3>
      </h2>
      <p>Are you intervening with a very small % of the population?</p>
      <button type="button" class="btn btn-primary btn-sm" id="asnwer7" disabled>Yes</button>
      <button type="button" class="btn btn-secondary btn-sm" id="asnwer8" disabled>No</button>
  </div> -->




  <script>
  $(document).ready(function () {
    $("#dropGuide").click(function () {
      $("#guide").prop("hidden", false);
    });
    // $("#3").click(function () {
    //   alert("peos");
    //   // document.getElementById('mean_difference').style.display='none';
    //   // // $("tr.mean_difference").prop("hidden", true)
    // });
    // $("#asnwer1").click(function () {
    //   $("#asnwer3").prop("disabled", false);
    //   $("#asnwer4").prop("disabled", false);
    //   // document.getElementById('mean_difference').style.display='none';
    //   // // $("tr.mean_difference").prop("hidden", true)
    // });
    // $("#asnwer2").click(function () {
    //   $("#asnwer5").prop("disabled", false);
    //   $("#asnwer6").prop("disabled", false);
    // });
    // $("#asnwer3").click(function () {
    //   var answers = document.querySelectorAll('#asnwer1,#asnwer2,#asnwer3,#asnwer4,#asnwer5,#asnwer6,#asnwer7,#asnwer8');
    //   for (var i = 0; i < answers.length; i++) {
    //     answers[i].disabled = true;
    //   }
    //   var picked = document.querySelectorAll('#disparate_impact,#false_discovery_rate,#false_positive_rate,#false_omission_rate,#false_negative_rate');
    //   picked.forEach(element => element.style.display = 'none');

    // });
    // $("#asnwer4").click(function () {
    //   var answers = document.querySelectorAll('#asnwer1,#asnwer2,#asnwer3,#asnwer4,#asnwer5,#asnwer6,#asnwer7,#asnwer8');
    //   for (var i = 0; i < answers.length; i++) {
    //     answers[i].disabled = true;
    //   }
    //   var picked = document.querySelectorAll('#mean_difference,#false_discovery_rate,#false_positive_rate,#false_omission_rate,#false_negative_rate');
    //   picked.forEach(element => element.style.display = 'none');

    // });
    // $("#asnwer5").click(function () {
    //   $("#asnwer7").prop("disabled", false);
    //   $("#asnwer8").prop("disabled", false);
    //   $("#asnwer7").click(function () {
    //     var answers = document.querySelectorAll('#asnwer1,#asnwer2,#asnwer3,#asnwer4,#asnwer5,#asnwer6,#asnwer7,#asnwer8');
    //     for (var i = 0; i < answers.length; i++) {
    //       answers[i].disabled = true;
    //     }
    //     var picked = document.querySelectorAll('#mean_difference,#disparate_impact,#false_positive_rate,#false_omission_rate,#false_negative_rate');
    //     picked.forEach(element => element.style.display = 'none');

    //   });
    //   $("#asnwer8").click(function () {
    //     var answers = document.querySelectorAll('#asnwer1,#asnwer2,#asnwer3,#asnwer4,#asnwer5,#asnwer6,#asnwer7,#asnwer8');
    //     for (var i = 0; i < answers.length; i++) {
    //       answers[i].disabled = true;
    //     }
    //     var picked = document.querySelectorAll('#mean_difference,#disparate_impact,#false_discovery_rate,#false_omission_rate,#false_negative_rate');
    //     picked.forEach(element => element.style.display = 'none');

    //   });
    // });
    // $("#asnwer6").click(function () {
    //   $("#asnwer7").prop("disabled", false);
    //   $("#asnwer8").prop("disabled", false);
    //   $("#asnwer7").click(function () {
    //     var answers = document.querySelectorAll('#asnwer1,#asnwer2,#asnwer3,#asnwer4,#asnwer5,#asnwer6,#asnwer7,#asnwer8');
    //     for (var i = 0; i < answers.length; i++) {
    //       answers[i].disabled = true;
    //     }
    //     var picked = document.querySelectorAll('#mean_difference,#disparate_impact,#false_positive_rate,#false_discovery_rate,#false_negative_rate');
    //     picked.forEach(element => element.style.display = 'none');

    //   });
    //   $("#asnwer8").click(function () {
    //     var answers = document.querySelectorAll('#asnwer1,#asnwer2,#asnwer3,#asnwer4,#asnwer5,#asnwer6,#asnwer7,#asnwer8');
    //     for (var i = 0; i < answers.length; i++) {
    //       answers[i].disabled = true;
    //     }
    //     var picked = document.querySelectorAll('#mean_difference,#disparate_impact,#false_discovery_rate,#false_omission_rate,#false_positive_rate');
    //     picked.forEach(element => element.style.display = 'none');

    //   });
    // });
    $('#button').click(function () {
      var metrics = [];
      var checkboxes = document.getElementsByName("checkbox");
      var checkboxesChecked = [];
      for (var i = 0; i < checkboxes.length; i++) {
        if (checkboxes[i].checked) {
          metrics.push(checkboxes[i].value);
        }
      }
      metrics = { "name": metrics };
      var formdata = JSON.stringify(metrics);
      $.ajax({
        url: '/graphs',
        type: 'POST',
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        data: formdata,
        success: function () { $("#form").prop("hidden", false); $("#button").prop("hidden", true); }
      })
    });
  });
</script>